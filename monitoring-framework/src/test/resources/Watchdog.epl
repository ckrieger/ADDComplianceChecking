create schema VMCount(number int);
create window VMCountWin.win:length(1) as VMCount;

create schema ReduceCountEvent(number int);
create window ReduceCountEventWin.win:length(1) as ReduceCountEvent;

create schema IncreaseCountEvent(number int);
create window IncreaseCountEventWin.win:length(1) as IncreaseCountEvent;
create context SegmentedByScalingGroup partition by scalingGroupId from VirtualMachine;

insert into VMCount select cast(count(*),int) as number from VirtualMachine(scalingGroupId = "${scalingGroupId}").std:unique(vmId).win:time_batch(5 sec) vme;

insert into ReduceCountEvent select se.number as number from pattern [ every fe=VMCount -> se=VMCount(fe.number > se.number)];

insert into IncreaseCountEvent select see.number as number from pattern [ every fee=VMCount -> see=VMCount(fee.number < see.number)];

@Name('Watchdog Violation')select * from pattern [ every ReduceCountEvent -> not IncreaseCountEvent() and timer:interval(${timeThreshold} milliseconds)];


